name: Frontend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  test:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: |
        CHROME_BIN=/usr/bin/google-chrome
        npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless

    - name: Debug Coverage Path
      run: |
        pwd
        echo "=== Current directory contents ==="
        ls -la
        echo "=== Coverage directory (if exists) ==="
        ls -la coverage/ || echo "No coverage directory"
        echo "=== karma.conf.js contents ==="
        cat karma.conf.js

    - name: Create Coverage Report
      if: success()
      id: coverage-report
      run: |
        if [ -f "coverage/coverage-summary.json" ]; then
          echo 'REPORT<<EOF' >> $GITHUB_ENV
          echo '### Frontend Test Coverage 📊' >> $GITHUB_ENV
          echo '#### Summary' >> $GITHUB_ENV
          jq -r '.total | "- Statements: \(.statements.pct)%\n- Branches: \(.branches.pct)%\n- Functions: \(.functions.pct)%\n- Lines: \(.lines.pct)%"' coverage/coverage-summary.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        else
          echo 'REPORT<<EOF' >> $GITHUB_ENV
          echo '### ⚠️ Frontend Test Coverage Report Not Found' >> $GITHUB_ENV
          echo 'The coverage report was not generated. This might be due to test configuration issues.' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        fi

    - name: Find Comment
      uses: peter-evans/find-comment@v2
      if: success()
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Frontend Test Coverage

    - name: Comment PR
      uses: peter-evans/create-or-update-comment@v3
      if: success()
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: ${{ env.REPORT }}
        edit-mode: replace
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage-reports
        path: front/coverage/
        retention-days: 7
